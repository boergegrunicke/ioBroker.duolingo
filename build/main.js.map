{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.4.0\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from '@iobroker/adapter-core';\nimport axios from 'axios';\n\n// Load your modules here, e.g.:\n// import * as fs from \"fs\";\n\nclass Duolingo extends utils.Adapter {\n\tUSER_AGENT =\n\t\t'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36';\n\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: 'duolingo',\n\t\t});\n\t\tthis.on('ready', this.onReady.bind(this));\n\t\t// this.on('objectChange', this.onObjectChange.bind(this));\n\t\t// this.on('message', this.onMessage.bind(this));\n\t\tthis.on('unload', this.onUnload.bind(this));\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tprivate async onReady(): Promise<void> {\n\t\tawait this.createStates();\n\n\t\ttry {\n\t\t\tconst response = await axios.get('https://www.duolingo.com/api/1/version_info', {\n\t\t\t\theaders: { 'User-Agent': this.USER_AGENT },\n\t\t\t});\n\t\t\tif (response.status == 200) {\n\t\t\t\tthis.setState('country', response.data.country);\n\t\t\t\tthis.setState('age_restriction_limit', response.data.age_restriction_limit);\n\t\t\t}\n\t\t\tconst userResponse = await axios.get(`https://www.duolingo.com/users/${this.config.username}`, {\n\t\t\t\theaders: { 'User-Agent': this.USER_AGENT, Authorization: `Bearer ${this.config.jwt}` },\n\t\t\t});\n\t\t\tthis.log.info('result : ' + userResponse.status + ' - ' + userResponse.statusText);\n\t\t\tif (userResponse.status == 200) {\n\t\t\t\tthis.log.info('OK');\n\t\t\t\tconst username = userResponse.data.username.toString().replace('.', '_');\n\t\t\t\tthis.createStatesForUsername(username);\n\n\t\t\t\tthis.setState(`${username}.learning_language`, userResponse.data.learning_language_string);\n\t\t\t\tthis.setState(`${username}.email`, userResponse.data.learning_language_string);\n\t\t\t\tthis.setState(`${username}.fullname`, userResponse.data.fullname);\n\t\t\t\tthis.setState(`${username}.streak_extended_today`, userResponse.data.streak_extended_today);\n\t\t\t\tthis.setState(`${username}.daily_goal`, userResponse.data.daily_goal);\n\t\t\t\tthis.setState(`${username}.id`, userResponse.data.id);\n\t\t\t\tthis.setState(`${username}.streak`, userResponse.data.site_streak);\n\n\t\t\t\tthis.log.info('calendar-elements : ' + userResponse.data.calendar.length);\n\t\t\t\tconst todayElements = userResponse.data.calendar.filter((element) =>\n\t\t\t\t\tthis.isTimestampFromToday(element.datetime),\n\t\t\t\t);\n\t\t\t\tconst yesterdayElements = userResponse.data.calendar.filter((element) =>\n\t\t\t\t\tthis.isTimestampFromYesterday(element.datetime),\n\t\t\t\t);\n\t\t\t\tlet todayPoints = 0;\n\t\t\t\ttodayElements.forEach((element) => {\n\t\t\t\t\ttodayPoints += element.improvement;\n\t\t\t\t});\n\t\t\t\tlet yesterdayPoints = 0;\n\t\t\t\tyesterdayElements.forEach((element) => {\n\t\t\t\t\tyesterdayPoints += element.improvement;\n\t\t\t\t});\n\n\t\t\t\tthis.setState(`${username}.today.exercises`, todayElements.length);\n\t\t\t\tthis.setState(`${username}.today.points`, todayPoints);\n\t\t\t\tthis.setState(`${username}.yesterday.exercises`, yesterdayElements.length);\n\t\t\t\tthis.setState(`${username}.yesterday.points`, yesterdayPoints);\n\n\t\t\t\tthis.log.info('is today today ? ' + this.isTimestampFromToday(new Date().getTime()));\n\t\t\t}\n\t\t} catch (exception) {\n\t\t\tthis.log.error('error : ' + exception);\n\t\t}\n\n\t\t// The adapters config (in the instance object everything under the attribute \"native\") is accessible via\n\t\t// this.config:\n\t\t// this.config.userId\n\t}\n\n\tprivate async createStates(): Promise<void> {\n\t\tawait this.setObjectNotExistsAsync('country', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: 'API-Country',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'indicator',\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t\tawait this.setObjectNotExistsAsync('age_restriction_limit', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: 'Age restriction limit',\n\t\t\t\ttype: 'number',\n\t\t\t\trole: 'indicator',\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t}\n\n\tprivate async createStatesForUsername(username: string): Promise<void> {\n\t\tawait this.setObjectNotExistsAsync(`${username}.learning_language`, {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: 'Learning language',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'indicator',\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t\tawait this.setObjectNotExistsAsync(`${username}.streak_extended_today`, {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: 'Streak extended todayy',\n\t\t\t\ttype: 'boolean',\n\t\t\t\trole: 'indicator',\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t\tawait this.setObjectNotExistsAsync(`${username}.email`, {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: 'E-Mail',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'indicator',\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t\tawait this.setObjectNotExistsAsync(`${username}.fullname`, {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: 'Fullname',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'indicator',\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t\tawait this.setObjectNotExistsAsync(`${username}.daily_goal`, {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: 'Daily goal',\n\t\t\t\ttype: 'number',\n\t\t\t\trole: 'indicator',\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t\tawait this.setObjectNotExistsAsync(`${username}.id`, {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: 'ID',\n\t\t\t\ttype: 'number',\n\t\t\t\trole: 'indicator',\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t\tawait this.setObjectNotExistsAsync(`${username}.streak`, {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: 'Streak',\n\t\t\t\ttype: 'number',\n\t\t\t\trole: 'indicator',\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t\tawait this.setObjectNotExistsAsync(`${username}.today.exercises`, {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: 'Exercises today',\n\t\t\t\ttype: 'number',\n\t\t\t\trole: 'indicator',\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t\tawait this.setObjectNotExistsAsync(`${username}.today.points`, {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: 'Points today',\n\t\t\t\ttype: 'number',\n\t\t\t\trole: 'indicator',\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t\tawait this.setObjectNotExistsAsync(`${username}.yesterday.exercises`, {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: 'Exercises yesterday',\n\t\t\t\ttype: 'number',\n\t\t\t\trole: 'indicator',\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t\tawait this.setObjectNotExistsAsync(`${username}.yesterday.points`, {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: 'Points yesterday',\n\t\t\t\ttype: 'number',\n\t\t\t\trole: 'indicator',\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t}\n\n\tprivate isTimestampFromToday(timestamp: number): boolean {\n\t\t// Create a Date object from the timestamp\n\t\tconst date = new Date(timestamp);\n\n\t\t// Get the current date\n\t\tconst currentDate = new Date();\n\n\t\t// Compare the year, month, and day of the two dates\n\t\tif (\n\t\t\tdate.getFullYear() === currentDate.getFullYear() &&\n\t\t\tdate.getMonth() === currentDate.getMonth() &&\n\t\t\tdate.getDate() === currentDate.getDate()\n\t\t) {\n\t\t\treturn true; // The timestamp is from today\n\t\t}\n\n\t\treturn false; // The timestamp is not from today\n\t}\n\n\tprivate isTimestampFromYesterday(timestamp: number): boolean {\n\t\t// Create a Date object from the timestamp\n\t\tconst date = new Date(timestamp);\n\n\t\t// Get the current date\n\t\tconst currentDate = new Date();\n\n\t\t// Compare the year, month, and day of the two dates\n\t\tif (\n\t\t\tdate.getFullYear() === currentDate.getFullYear() &&\n\t\t\tdate.getMonth() === currentDate.getMonth() &&\n\t\t\tdate.getDate() === currentDate.getDate() - 1\n\t\t) {\n\t\t\treturn true; // The timestamp is from today\n\t\t}\n\n\t\treturn false; // The timestamp is not from today\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\t// Here you must clear all timeouts or intervals that may still be active\n\t\t\t// clearTimeout(timeout1);\n\t\t\t// clearTimeout(timeout2);\n\t\t\t// ...\n\t\t\t// clearInterval(interval1);\n\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t// If you need to react to object changes, uncomment the following block and the corresponding line in the constructor.\n\t// You also need to subscribe to the objects with `this.subscribeObjects`, similar to `this.subscribeStates`.\n\t// /**\n\t//  * Is called if a subscribed object changes\n\t//  */\n\t// private onObjectChange(id: string, obj: ioBroker.Object | null | undefined): void {\n\t// \tif (obj) {\n\t// \t\t// The object was changed\n\t// \t\tthis.log.info(`object ${id} changed: ${JSON.stringify(obj)}`);\n\t// \t} else {\n\t// \t\t// The object was deleted\n\t// \t\tthis.log.info(`object ${id} deleted`);\n\t// \t}\n\t// }\n\n\t// If you need to accept messages in your adapter, uncomment the following block and the corresponding line in the constructor.\n\t// /**\n\t//  * Some message was sent to this instance over message box. Used by email, pushover, text2speech, ...\n\t//  * Using this method requires \"common.messagebox\" property to be set to true in io-package.json\n\t//  */\n\t// private onMessage(obj: ioBroker.Message): void {\n\t// \tif (typeof obj === 'object' && obj.message) {\n\t// \t\tif (obj.command === 'send') {\n\t// \t\t\t// e.g. send email or pushover or whatever\n\t// \t\t\tthis.log.info('send command');\n\n\t// \t\t\t// Send response in callback if required\n\t// \t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, 'Message received', obj.callback);\n\t// \t\t}\n\t// \t}\n\t// }\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Duolingo(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new Duolingo())();\n}\n"],
  "mappings": "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",
  "names": ["axios"]
}
